define({"0":{i:0.0154868421941938,u:"../Content/Topics/Welcome.html",a:"Welcome to FlareLint 2.0beta! FlareLint scans a MadCap Flare project for adherence to your style rules then displays a report in your preferred web browser. It\u0027s like picking the lint off your sweater, only more fun. Use FlareLint to make production of your MadCap Flare output faster and less ...",t:"Welcome"},"1":{i:0.0154868421941938,u:"../Content/Topics/WhatsNew.html",a:"What’s New New features and bug fixes:",t:"What’s New"},"2":{i:0.0154868421941938,u:"../Content/Topics/SystemRequirements.html",a:"System Requirements To install and use FlareLint, you need the following: a workstation running Microsoft Windows 7 or later a user account in Microsoft Windows that has administrative privileges to install software MadCap Flare version 8 or later a web browser",t:"System Requirements"},"3":{i:0.0447104788838407,u:"../Content/Topics/Installing.html",a:"Before using FlareLint for the first time, you need to install the Python programming language and the FlareLint package.  There are many variations of the Python installer to handle Python versions, host operating systems, and installation methods. But FlareLint requires the Python installer that ...",t:"Installing"},"4":{i:0.0154868421941938,u:"../Content/Topics/Upgrading.html",a:"To upgrade FlareLint on your computer, you need to uninstall the current Python FlareLint package then install your new Python FlareLint package. Note: If you are upgrading from FlareLint 1.1 or 1.2 to FlareLint 2.0beta or later, you need to also need to re-create any custom rules your team uses. ...",t:"Upgrading"},"5":{i:0.0154868421941938,u:"../Content/Topics/Uninstalling.html",a:"To remove FlareLint and your FlareLint rules from your computer, you need to uninstall the Python FlareLint package, uninstall Python, then delete your FlareLint rules. To uninstall FlareLint: Open the Uninstall or Change a Program control panel. In the Windows Start menu, click Control Panel. Under ...",t:"Uninstalling"},"6":{i:0.0154868421941938,u:"../Content/Topics/VersusAnalyzer.html",a:"FlareLint complements MadCap Flare reports and MadCap Analyzer. MadCap Flare reports and MadCap Analyzer gather and report information about the state of a Flare project. For example, you can use these features to catch broken links and unused images. On the other hand, FlareLint analyzes your ...",t:"FlareLint and MadCap Analyzer"},"7":{i:0.0312834133621259,u:"../Content/Topics/Using.html",a:"FlareLint scans your MadCap Flare project for conformance to your rules. FlareLint scans topics, snippets, TOCs, and any other XML-based files in the project. It then generates a report named  FlareLintReport.html and opens this report in your default web browser. If there is an existing FlareLint ...",t:"Using"},"8":{i:0.0154868421941938,u:"../Content/Topics/ReadingReport.html",a:"FlareLint saves your report in the same folder as your project. Its file name is  FlareLintReport.html. FlareLint does not resolve references to variables, snippets, cross-references, conditional text, and so on. So interpret its messages with that in mind. A FlareLint report has a header and a list ...",t:"Reading a Report"},"9":{i:0.0154868421941938,u:"../Content/Topics/Customizing.html",a:"You can customize FlareLint and distribute your improvements.  FlareLint is open source so you have full access to its source code. For example, you can add, modify, or delete rules. You can integrate with other tools. You can customize HTML output or generate reports in new formats.  To customize ...",t:"Customizing and Distributing"},"10":{i:0.0154868421941938,u:"../Content/Topics/Contributing.html",a:"FlareLint is so useful to us that we want other MadCap Flare users to benefit from it. We appreciate and welcome your feedback and improvements. Share with us and other FlareLint users! Does FlareLint save you time or help you ship better documentation? Do you have ideas to improve FlareLint or have ...",t:"Sending Feedback"},"11":{i:0.0371215454936098,u:"../Content/Topics/RulesManaging.html",a:"FlareLint comes with a default set of rules. You might find that some are too general, too specific, or not relevant for your projects. Or you might want to confirm which rules FlareLint uses. You can view which rules are active and specify a standardized set of rules for your team. The rules that ...",t:"Managing Rules"},"12":{i:0.0154868421941938,u:"../Content/Topics/RulesAddingIgnoring.html",a:"You can specify which rules to apply and which rules to ignore by modifying the contents of your personal rule folder,  %APPDATA%\\FlareLint. FlareLint loads a rule when it meets these requirements: The file name of the rule ends with rule.txt. The rule file is in your personal rule folder,  ...",t:"Choosing Rules to Apply"},"13":{i:0.0154868421941938,u:"../Content/Topics/RulesStandard.html",a:"You can specify a set of rules that your team uses. By standardizing the rules that each member of your team uses, you can ensure that your Flare projects are consistent.  Since FlareLint rules are simply plain text files, there are a number of ways that you can manage these files for your team. ...",t:"Defining a Standard Set of Rules"},"14":{i:0.0154868421941938,u:"../Content/Topics/RulesTroubleshooting.html",a:"Adding, removing, creating, and customizing rules can give you results that you do not expect.  Tip: You can view the name of the rule file from which an error was generated by hovering your mouse over the word \"error\" or \"warning\" in the message. Use the following tips to help you diagnose and fix ...",t:"Troubleshooting Rules"},"15":{i:0.0546732912357566,u:"../Content/Topics/RulesCreating.html",a:"You can create new rules and modify existing ones. Each FlareLint rule is defined in a FlareLint rule file. A  rule file is a plain text file that you can view and edit with any text editor, such as Microsoft Notepad. The name of a rule file ends with rule.txt. For example, the ...",t:"Creating and Customizing Rules"},"16":{i:0.0154868421941938,u:"../Content/Topics/FollowingBreaking.html",a:"FlareLint applies all its rules to each file in a Flare project. Either the file follows a rule, breaks a rule, or a rule is not applicable to the file.  FlareLint adds a rule’s message to the report only when a file breaks the rule. A file follows a rule when it meets all these requirements: The ...",t:"Following and Breaking Rules"},"17":{i:0.0154868421941938,u:"../Content/Topics/RulesSectionComment.html",a:"Contains information, annotations, notes, reminders, and other information for you and other people to read. FlareLint ignores the content of a comment section. The comment is only visible in a rule file, it is not included in a FlareLint report. A comment section is optional. If a rule has a ...",t:"Comment Section"},"18":{i:0.0154868421941938,u:"../Content/Topics/RulesSectionRule.html",a:"Specifies the type of rule, either error or warning. A rule file must contain one rule section. The rule section must be after the optional comment and before the extensions section. An example of a rule section for an error rule: rule: error Another example of a rule section, this time for a ...",t:"Rule Section"},"19":{i:0.0198747786297305,u:"../Content/Topics/RulesSectionExtensions.html",a:"Specifies the types of files to which to apply the rule. You specify types of files with their file name extensions, without the initial dot (“.”). You must specify at least one type of file. To specify more than one type of file, separate file name extensions with spaces and line breaks. A rule ...",t:"Extensions Section"},"20":{i:0.0154868421941938,u:"../Content/Topics/RulesSectionWhen.html",a:"Specifies an XML element in a Flare file to which to apply the rule. A rule file contains at least one when section and can contain many. The when sections must be after the extensions section and before the test sections. After using the extensions section to match a file, FlareLint then determines ...",t:"When Section"},"21":{i:0.0154868421941938,u:"../Content/Topics/RulesSectionTest.html",a:"Verifies that the element that was matched by a when section meets the rule’s criteria. A rule file contains at least one test section and can contain many. The test sections must be after the when sections and before the message section. After succeeding in matching a file with the extensions ...",t:"Test Section"},"22":{i:0.0154868421941938,u:"../Content/Topics/RulesSectionMessage.html",a:"Specifies the text to insert in a report when an element fails a rule. A rule file must contain a single message section. The message section must be after the test sections. When a matched element in a matched file fails all tests in a rule, FlareLint considers the rule to be broken  and inserts ...",t:"Message Section"},"23":{i:0.0198747786297305,u:"../Content/Topics/RulesExpressionsPredicates.html",a:"In a rule, each when and test section contains an expression. An expression specifies a logical assertion about an element. An expression gives a result that is either true or false. In a when section, a true expression means that a rule should be applied to the element. If all expressions in the ...",t:"Expressions and Predicates"},"24":{i:0.0154868421941938,u:"../Content/Topics/RulesWildcard.html",a:"The wildcard (“*”) matches any element tag. You cannot use the wildcard to match attributes. Sometimes you need to match an element with a unique quality and the kind of element is unimportant. For example, your style guide recommends using a true em-dash character (“—”) instead of a double hyphen ...",t:"Wildcards"},"25":{i:0.0154868421941938,u:"../Content/Topics/RulesQuoting.html",a:"Some predicates require you to specify some text for an element’s content or an attribute’s value. You can specify text by starting and ending it with straight quotation marks. For example the following predicate gives true for a p element ends with The End: self-ends p \"The End.\" You must quote ...",t:"Quoting Text"},"26":{i:0.0154868421941938,u:"../Content/Topics/RulesPredicates.html",a:"Predicate Reference A predicate is an assertion of an XML element\u0027s property or its hierarchical relationship to other elements. ",t:"Predicate Reference"},"27":{i:0.0154868421941938,u:"../Content/Topics/PointsOfView.html",a:"Most predicates start with a point of view. A point of view specifies where to look relative to an element.  The point of view, pov may be one of the following: after, ancestor, before, child, descendant, next, parent, previous, and self. For example: \u003chtml\u003e\n  \u003cbody\u003e     \u003ch1\u003e\u003cem\u003eCats\u003c/em\u003e Create ...",t:"Point of View"},"28":{i:0.0154868421941938,u:"../Content/Topics/Predicates/after.html",a:"\nafter tag\nafter *\n Is true when an element has a following sibling element with tag tag, false otherwise.  Use the wildcard (“*”) to match any element tag. This predicate can be used as a point of view. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these ...",t:"after"},"29":{i:0.0154868421941938,u:"../Content/Topics/Predicates/ancestor.html",a:"\nancestor tag\nancestor *\n Is true when an element has at least one ancestor with tag tag, false otherwise. Use the wildcard (“*”) to match any element tag. This predicate can be used as a point of view. For example: \u003cul\u003e\u003cli\u003e\u003cp\u003eEdmunston\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e For the p element, the predicate ancestor li ...",t:"ancestor"},"30":{i:0.0154868421941938,u:"../Content/Topics/Predicates/before.html",a:"\nbefore tag\nbefore *\n Is true when an element has a preceding sibling element with tag tag, false otherwise. Use the wildcard (“*”) to match any element tag. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these places:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eEdmunston\u003c/li\u003e\n  ...",t:"before"},"31":{i:0.0154868421941938,u:"../Content/Topics/Predicates/child.html",a:"child tag\nchild * Is true when an element has a child with tag tag, false otherwise. Use the wildcard (“*”) to match any element tag. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these places:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eEdmunston\u003c/li\u003e\n  \u003cli\u003eSaint John\u003c/li\u003e\n  ...",t:"child"},"32":{i:0.0154868421941938,u:"../Content/Topics/Predicates/condition.html",a:"condition set.name Is true when an element has a Flare condition of set.name or is in an element that has this Flare condition, false otherwise. The Flare condition must use the format of Flare condition set, period (.), then a name defined in the Flare condition set.  For example: \u003ch1\u003eNew Brunswick ...",t:"condition"},"33":{i:0.0154868421941938,u:"../Content/Topics/Predicates/descendant.html",a:"descendant tag\ndescendant * Is true when an element has a child with tag tag, or a child of any tag with a child of tag tag, and so on, or a false otherwise. Use the wildcard (“*”) to match any element tag. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these ...",t:"descendant"},"34":{i:0.0154868421941938,u:"../Content/Topics/Predicates/fail.html",a:"fail Always false.  It is useful for rule tests, when an element match is sufficient to determine that a rule is broken and needs no further tests. For example, the following rule results in an error message when an h3 element appears in a topic: rule: error\nextensions: htm html\nwhen: self h3\ntest: ...",t:"fail"},"35":{i:0.0154868421941938,u:"../Content/Topics/Predicates/language.html",a:"language tag True when the element’s language attribute, xml:lang, begins with tag. This predicate is false otherwise. If the element has no xml:lang attribute, then examine the nearest ancestor that has an xml:lang attribute. If there is no xml:lang attribute in the Flare file being scanned, then ...",t:"language"},"36":{i:0.0154868421941938,u:"../Content/Topics/Predicates/next.html",a:"next tag True when the sibling that immediately follows an element is named tag, false otherwise.  Use the wildcard (“*”) to match any element tag. This predicate can be used as a point of view. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these ...",t:"next"},"37":{i:0.0154868421941938,u:"../Content/Topics/Predicates/parent.html",a:"parent tag\nparent * True when the element that immediately contains an element is named tag, false otherwise.  Use the wildcard (“*”) to match any element tag. This predicate can be used as a point of view. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these ...",t:"parent"},"38":{i:0.0154868421941938,u:"../Content/Topics/Predicates/attribute.html",a:"pov-attribute tag name pov-attribute * name True when an element tag has a name attribute with a value that is not empty, false otherwise.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, before, child, descendant, next, parent, ...",t:"pov-attribute"},"39":{i:0.0154868421941938,u:"../Content/Topics/Predicates/attribute-contains.html",a:"pov-attribute-contains tag name \"text\"\npov-attribute-contains * name \"text\" True when an element has an attribute name and its value contains text. False when either an element does not have an attribute name or, if it does have this attribute, its value does not contain text. This predicate is ...",t:"pov-attribute-contains"},"40":{i:0.0154868421941938,u:"../Content/Topics/Predicates/attribute-ends.html",a:"pov-attribute-ends tag name \"text\"\npov-attribute-ends * name \"text\" True when an element has an attribute name and its value ends with text. False when either an element does not have an attribute name or, if it does have this attribute, its value does not end with text.  Use the wildcard (“*”) to ...",t:"pov-attribute-ends"},"41":{i:0.0154868421941938,u:"../Content/Topics/Predicates/attribute-equals.html",a:"pov-attribute-equals tag name \"text\"\npov-attribute-equals * name \"text\" True when an element has an attribute name and its value is text. False when either an element does not have an attribute name or, if it does have this attribute, its value is not text.  Use the wildcard (“*”) to match any ...",t:"pov-attribute-equals"},"42":{i:0.0154868421941938,u:"../Content/Topics/Predicates/begins.html",a:"pov-begins tag \"text\"\npov-begins * \"text\" True when an element, including the content of its descendant elements, starts with text. False when text does not appear at the beginning of an element and its descendants.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one ...",t:"pov-begins"},"43":{i:0.0154868421941938,u:"../Content/Topics/Predicates/contains.html",a:"pov-contains tag \"text\"\npov-contains * \"text\" True when an element, including the content of its descendant elements, contains text. False when text does not appear in an element and its descendants.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the ...",t:"pov-contains"},"44":{i:0.0154868421941938,u:"../Content/Topics/Predicates/empty.html",a:"pov-empty tag pov-empty * True when the text in an element and its descendants are empty. Spaces and line breaks at the beginning and end of the element are ignored. Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, before, child, ...",t:"pov-empty"},"45":{i:0.0154868421941938,u:"../Content/Topics/Predicates/ends.html",a:"pov-ends tag \"text\"\npov-ends * \"text\" True when an element, including the content of its descendant elements, ends with text. False when text does not appear at the end of an element and its descendants.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the ...",t:"pov-ends"},"46":{i:0.0181196040555158,u:"../Content/Topics/Predicates/first.html",a:"pov-first tag pov-first * True when an element tag is the first child among its siblings. The sibling elements do not have to be the same.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, before, child, descendant, next, parent, ...",t:"pov-first"},"47":{i:0.0154868421941938,u:"../Content/Topics/Predicates/last.html",a:"pov-last tag pov-last * True when an element tag is the last child among its siblings. The sibling elements do not have to be the same.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, before, child, descendant, next, parent, ...",t:"pov-last"},"48":{i:0.0154868421941938,u:"../Content/Topics/Predicates/position.html",a:"pov-position tag number pov-position * number True when an element tag is the nth child among its siblings. The sibling elements do not have to be the same. The first child is at position 0. Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ...",t:"pov-position"},"49":{i:0.0154868421941938,u:"../Content/Topics/Predicates/padding.html",a:"pov-padding tag pov-padding * True when the text in an element, excluding the content of its descendants, has spaces and line breaks at the beginning or end of the element’s content. Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, ...",t:"pov-padding"},"50":{i:0.0154868421941938,u:"../Content/Topics/Predicates/style.html",a:"pov-style tag pov-style tag.class pov-style .class True when the element\u0027s tag and its class attribute are tag and class, respectively. This predicate uses a similar format to the Style Picker and Styles window in Flare. In these windows, the name after a period (.) is the class attribute in the ...",t:"pov-style"},"51":{i:0.0154868421941938,u:"../Content/Topics/Predicates/text.html",a:"pov-text tag \"text\"\npov-text * \"text\" True when an element, excluding the content of its descendant elements, contains text. False when text does not appear in an element.  Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, before, ...",t:"pov-text"},"52":{i:0.0154868421941938,u:"../Content/Topics/Predicates/variable.html",a:"pov-variable tag set.name pov-variable * set.name True when an element contains at least one reference to a variable, set.name, false otherwise. Use the wildcard (“*”) to match any element tag. The point of view, pov may be one of the following: after, ancestor, before, child, descendant, next, ...",t:"pov-variable"},"53":{i:0.0154868421941938,u:"../Content/Topics/Predicates/previous.html",a:"previous tag\nprevious * True when the sibling that immediately precedes an element is named tag, false otherwise.  Use the wildcard (“*”) to match any element tag. For example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these places:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eEdmunston\u003c/li\u003e\n  ...",t:"previous"},"54":{i:0.0154868421941938,u:"../Content/Topics/Predicates/self.html",a:"self tag\nself * True when the element itself is named tag, false otherwise.  Use the wildcard (“*”) to match any element tag. This predicate can be used as a point of view. Example: \u003ch1\u003eNew Brunswick Bucket List\u003c/h1\u003e\n\u003cp\u003eNever negate the boundless beauty of these places:\u003c/p\u003e\n\u003cul\u003e\n  ...",t:"self"},"55":{i:0.0154868421941938,u:"../Content/Topics/Predicates/snippet.html",a:"snippet \"snippet-file\"\nsnippet \"snippet-file\"\n True when an element is a link to a snippet, snippet-file, false otherwise. This predicate is case-sensitive. Flare has two kinds of inserted snippets, text and block. A text snippet is in-line with other content. For example. a paragraph that contains ...",t:"snippet"},"56":{i:0.0154868421941938,u:"../Content/Topics/Credits.html",a:"Feedback in the trenches: Roberta Boyle, Luca Cogliandro, Lesley Foster, Van Kurtz, Irene Plokar Managerial consent and inter-team support: Susan Daoud, Laurie Lafleur, Stéphanie Levert Maintainer: Marc Paquette Copyright 2016-2017 Intelerad Medical Systems Incorporated.  All rights reserved.  ...",t:"Credits"},});